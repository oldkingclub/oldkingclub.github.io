{"version":3,"sources":["webpack:///./src/components/vuetifyComponents/overflow-buttons/OverflowButtonsFilled.vue?e048","webpack:///src/components/vuetifyComponents/overflow-buttons/OverflowButtonsFilled.vue","webpack:///./src/components/vuetifyComponents/overflow-buttons/OverflowButtonsFilled.vue?0d3f","webpack:///./src/components/vuetifyComponents/overflow-buttons/OverflowButtonsFilled.vue","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VAutocomplete/VAutocomplete.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VAutocomplete/index.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VOverflowBtn/VOverflowBtn.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VBtn/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","dropdown_font","staticRenderFns","name","data","component","VListItemSubtitle","VList","VOverflowBtn","defaultMenuProps","offsetY","offsetOverflow","transition","extend","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","undefined","lazySearch","computed","classes","call","selectedIndex","filteredItems","selectedItems","map","getValue","hideSelected","some","hasItem","length","selectedItem","getText","isSearching","internalSearch","allItems","value","text","val","$emit","searchIsDirty","multiple","isFocused","hasDisplayedItems","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","updateSelf","hasSlot","oldVal","isMenuActive","activateMenu","setSearch","methods","setMenuIndex","$nextTick","menu","getTiles","updateMenuDimensions","updateDimensions","keyCode","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","autocomplete","domProps","slot","genInputSlot","role","genSelections","e","onFocus","isAppendInner","target","badInput","validity","onKeyDown","changeSelectedIndex","onTabDown","preventDefault","setSelectedItems","selectedValues","event","_event$clipboardData","_event$clipboardData2","currentItem","currentItemText","clipboardData","setData","editable","segmented","isAnyValueAllowed","index","last","genSegmentedBtn","genCommaSelection","readonly","label","genLabel","style","itemValue","itemObj","computedItems","callback","on","stopPropagation","initialValue","lazyValue"],"mappings":"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","file":"js/chunk-43efae9a.addb527c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-list-item-subtitle',{staticClass:\"text-wrap\"},[_vm._v(\" Text fields can be used with an alternative box design. Append and prepend icon props are not supported in this mode. \")]),_c('div',{staticClass:\"mt-4\"},[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_font,\"label\":\"Overflow Btn - filled\",\"filled\":\"\",\"target\":\"#dropdown-example-1\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <!-- Overflow Buttons Filled -->\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <div>\r\n        <v-list-item-subtitle class=\"text-wrap\">\r\n           Text fields can be used with an alternative box design. Append and prepend icon props are not supported in this mode.\r\n        </v-list-item-subtitle>\r\n        <div class=\"mt-4\">\r\n            <v-overflow-btn\r\n            class=\"my-2\"\r\n            :items=\"dropdown_font\"\r\n            label=\"Overflow Btn - filled\"\r\n            filled\r\n            target=\"#dropdown-example-1\"\r\n            ></v-overflow-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"OverflowButtonsFilled\",\r\n\r\n  data: () => ({\r\n      dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\r\n  })\r\n};\r\n</script>","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./OverflowButtonsFilled.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./OverflowButtonsFilled.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OverflowButtonsFilled.vue?vue&type=template&id=1667c52d&\"\nimport script from \"./OverflowButtonsFilled.vue?vue&type=script&lang=js&\"\nexport * from \"./OverflowButtonsFilled.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/_vuetify-loader@1.6.0@vuetify-loader/lib/runtime/installComponents.js\"\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VOverflowBtn } from 'vuetify/lib/components/VOverflowBtn';\ninstallComponents(component, {VListItemSubtitle,VOverflowBtn})\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onBlur(e) {\n      // Copy from VTextField, instead of inheriting from VSelect\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map","import VAutocomplete from './VAutocomplete';\nexport { VAutocomplete };\nexport default VAutocomplete;\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VOverflowBtn/VOverflowBtn.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete';\nimport VTextField from '../VTextField/VTextField'; // Components\n\nimport VBtn from '../VBtn'; // Utilities\n\nimport { consoleWarn } from '../../util/console';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n  props: {\n    editable: Boolean,\n    segmented: Boolean\n  },\n  computed: {\n    classes() {\n      return { ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable\n      };\n    },\n\n    isAnyValueAllowed() {\n      return this.editable || VAutocomplete.options.computed.isAnyValueAllowed.call(this);\n    },\n\n    isSingle() {\n      return true;\n    },\n\n    computedItems() {\n      return this.segmented ? this.allItems : this.filteredItems;\n    }\n\n  },\n  methods: {\n    genSelections() {\n      return this.editable ? VAutocomplete.options.methods.genSelections.call(this) : VSelect.options.methods.genSelections.call(this); // Override v-autocomplete's override\n    },\n\n    genCommaSelection(item, index, last) {\n      return this.segmented ? this.genSegmentedBtn(item) : VSelect.options.methods.genCommaSelection.call(this, item, index, last);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.domProps.value = this.editable ? this.internalSearch : '';\n      input.data.attrs.readonly = !this.isAnyValueAllowed;\n      return input;\n    },\n\n    genLabel() {\n      if (this.editable && this.isFocused) return null;\n      const label = VTextField.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data = label.data || {}; // Reset previously set styles from parent\n\n      label.data.style = {};\n      return label;\n    },\n\n    genSegmentedBtn(item) {\n      const itemValue = this.getValue(item);\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item;\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \"segmented\" prop without a selection slot, items must contain both a text and callback property', this);\n        return null;\n      }\n\n      return this.$createElement(VBtn, {\n        props: {\n          text: true\n        },\n        on: {\n          click(e) {\n            e.stopPropagation();\n            itemObj.callback(e);\n          }\n\n        }\n      }, [itemObj.text]);\n    },\n\n    updateValue(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=VOverflowBtn.js.map","import VBtn from './VBtn';\nexport { VBtn };\nexport default VBtn;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}