{"version":3,"sources":["webpack:///./src/components/vuetifyComponents/combobox/ComboboxNodatachips.vue?6c70","webpack:///src/components/vuetifyComponents/combobox/ComboboxNodatachips.vue","webpack:///./src/components/vuetifyComponents/combobox/ComboboxNodatachips.vue?6fbc","webpack:///./src/components/vuetifyComponents/combobox/ComboboxNodatachips.vue","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VAutocomplete/VAutocomplete.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VCombobox/VCombobox.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","items","search","on","$event","scopedSlots","_u","key","fn","_s","proxy","model","value","callback","$$v","expression","staticRenderFns","name","data","watch","component","VCombobox","VListItem","VListItemContent","VList","VListItemSubtitle","VListItemTitle","defaultMenuProps","offsetY","offsetOverflow","transition","extend","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","undefined","lazySearch","computed","classes","call","selectedIndex","filteredItems","selectedItems","map","getValue","hideSelected","some","hasItem","length","selectedItem","getText","isSearching","internalSearch","allItems","text","val","$emit","searchIsDirty","multiple","isFocused","hasDisplayedItems","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","virtualizedItems","document","addEventListener","onCopy","$refs","input","select","removeEventListener","updateSelf","hasSlot","oldVal","isMenuActive","activateMenu","setSearch","methods","setMenuIndex","$nextTick","menu","getTiles","updateMenuDimensions","updateDimensions","keyCode","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","autocomplete","domProps","slot","genInputSlot","role","genSelections","e","onFocus","isAppendInner","target","badInput","validity","onKeyDown","changeSelectedIndex","onTabDown","preventDefault","setSelectedItems","selectedValues","event","_event$clipboardData","_event$clipboardData2","currentItem","currentItemText","clipboardData","setData","delimiters","Array","returnObject","editingIndex","toString","$slots","delimiter","d","endsWith","slice","updateTags","paste","onPaste","index","chip","genChipSelection","componentOptions","listeners","dblclick","onChipInput","getMenuIndex","onFilteredItemsChanged","selectionStart","enter","onEnterDown","stopPropagation","updateEditing","_value","isUsingSlot","$scopedSlots","selection","hasChips","updateCombobox","menuIndex","splice","pastedItemText","getData","findExistingIndex"],"mappings":"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","file":"js/chunk-2bec6f61.2d258883.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-list-item-subtitle',{staticClass:\"text-wrap\"},[_vm._v(\" In this example we utilize a custom no-data slot to provide context to the user when searching / creating items. \")]),_c('div',{staticClass:\"mt-4\"},[_c('v-combobox',{attrs:{\"items\":_vm.items,\"search-input\":_vm.search,\"hide-selected\":\"\",\"hint\":\"Maximum of 5 tags\",\"label\":\"Add some tags\",\"multiple\":\"\",\"persistent-hint\":\"\",\"small-chips\":\"\"},on:{\"update:searchInput\":function($event){_vm.search=$event},\"update:search-input\":function($event){_vm.search=$event}},scopedSlots:_vm._u([{key:\"no-data\",fn:function(){return [_c('v-list-item',[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" No results matching \\\"\"),_c('strong',[_vm._v(_vm._s(_vm.search))]),_vm._v(\"\\\". Press \"),_c('kbd',[_vm._v(\"enter\")]),_vm._v(\" to create a new one \")])],1)],1)]},proxy:true}]),model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <!-- No data chips -->\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <div>\r\n        <v-list-item-subtitle class=\"text-wrap\">\r\n        In this example we utilize a custom no-data slot to provide context to the user when searching / creating items.\r\n        </v-list-item-subtitle>\r\n        <div class=\"mt-4\">\r\n            <v-combobox\r\n                v-model=\"model\"\r\n                :items=\"items\"\r\n                :search-input.sync=\"search\"\r\n                hide-selected\r\n                hint=\"Maximum of 5 tags\"\r\n                label=\"Add some tags\"\r\n                multiple\r\n                persistent-hint\r\n                small-chips\r\n                >\r\n                <template v-slot:no-data>\r\n                    <v-list-item>\r\n                    <v-list-item-content>\r\n                        <v-list-item-title>\r\n                        No results matching \"<strong>{{ search }}</strong>\". Press <kbd>enter</kbd> to create a new one\r\n                        </v-list-item-title>\r\n                    </v-list-item-content>\r\n                    </v-list-item>\r\n                </template>\r\n                </v-combobox>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ComboboxNodatachips\",\r\n\r\n  data: () => ({\r\n      items: ['Gaming', 'Programming', 'Vue', 'Vuetify'],\r\n      model: ['Vuetify'],\r\n      search: null,\r\n  }),\r\n  watch: {\r\n      model (val) {\r\n        if (val.length > 5) {\r\n          this.$nextTick(() => this.model.pop())\r\n        }\r\n      },\r\n    }\r\n};\r\n</script>","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./ComboboxNodatachips.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./ComboboxNodatachips.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComboboxNodatachips.vue?vue&type=template&id=52394b03&\"\nimport script from \"./ComboboxNodatachips.vue?vue&type=script&lang=js&\"\nexport * from \"./ComboboxNodatachips.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/_vuetify-loader@1.6.0@vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VCombobox,VListItem,VListItemContent,VListItemSubtitle,VListItemTitle})\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onBlur(e) {\n      // Copy from VTextField, instead of inheriting from VSelect\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => []\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: () => ({\n    editingIndex: -1\n  }),\n  computed: {\n    computedCounterValue() {\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\n    },\n\n    hasSlot() {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\n    },\n\n    isAnyValueAllowed() {\n      return true;\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\n    }\n\n  },\n  methods: {\n    onInternalSearchChanged(val) {\n      if (val && this.multiple && this.delimiters.length) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\n\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\n          this.updateTags();\n        }\n      }\n\n      this.updateMenuDimensions();\n    },\n\n    genInput() {\n      const input = VAutocomplete.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data.on.paste = this.onPaste;\n      return input;\n    },\n\n    genChipSelection(item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\n\n      if (this.multiple) {\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\n          dblclick: () => {\n            this.editingIndex = index;\n            this.internalSearch = this.getText(item);\n            this.selectedIndex = -1;\n          }\n        };\n      }\n\n      return chip;\n    },\n\n    onChipInput(item) {\n      VSelect.options.methods.onChipInput.call(this, item);\n      this.editingIndex = -1;\n    },\n\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown(e) {\n      e.preventDefault(); // If has menu index, let v-select-list handle\n\n      if (this.getMenuIndex() > -1) return;\n      this.$nextTick(this.updateSelf);\n    },\n\n    onFilteredItemsChanged(val, oldVal) {\n      if (!this.autoSelectFirst) return;\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal);\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // If user is at selection index of 0\n      // create a new tag\n\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\n        this.updateSelf();\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onTabDown(e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\n        e.preventDefault();\n        e.stopPropagation();\n        return this.updateTags();\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e);\n    },\n\n    selectItem(item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing();\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item);\n      }\n    },\n\n    setSelectedItems() {\n      if (this.internalValue == null || this.internalValue === '') {\n        this.selectedItems = [];\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\n      }\n    },\n\n    setValue(value) {\n      var _value;\n\n      VSelect.options.methods.setValue.call(this, (_value = value) != null ? _value : this.internalSearch);\n    },\n\n    updateEditing() {\n      const value = this.internalValue.slice();\n      value[this.editingIndex] = this.internalSearch;\n      this.setValue(value);\n      this.editingIndex = -1;\n    },\n\n    updateCombobox() {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips; // If search is not dirty and is\n      // using slot, do nothing\n\n      if (isUsingSlot && !this.searchIsDirty) return; // The internal search is not matching\n      // the internal value, update the input\n\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot\n      // to avoid a double input\n\n      if (isUsingSlot) this.internalSearch = undefined;\n    },\n\n    updateSelf() {\n      this.multiple ? this.updateTags() : this.updateCombobox();\n    },\n\n    updateTags() {\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n\n      if (menuIndex < 0 && !this.searchIsDirty) return;\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing();\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch); // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n\n      if (index > -1) {\n        const internalValue = this.internalValue.slice();\n        internalValue.splice(index, 1);\n        this.setValue(internalValue);\n      } // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n\n\n      if (menuIndex > -1) return this.internalSearch = null;\n      this.selectItem(this.internalSearch);\n      this.internalSearch = null;\n    },\n\n    onPaste(event) {\n      var _event$clipboardData;\n\n      if (!this.multiple || this.searchIsDirty) return;\n      const pastedItemText = (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.getData('text/vnd.vuetify.autocomplete.item+plain');\n\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\n        event.preventDefault();\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=VCombobox.js.map"],"sourceRoot":""}