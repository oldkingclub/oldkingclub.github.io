{"version":3,"sources":["webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/VTreeviewNode.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/util/filterTreeItems.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/VTreeview.js","webpack:///./src/components/vuetifyComponents/treeview/TreeviewColor.vue?0674","webpack:///src/components/vuetifyComponents/treeview/TreeviewColor.vue","webpack:///./src/components/vuetifyComponents/treeview/TreeviewColor.vue?ab54","webpack:///./src/components/vuetifyComponents/treeview/TreeviewColor.vue"],"names":["baseMixins","mixins","VTreeviewNodeProps","activatable","Boolean","activeClass","type","String","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","extend","name","inject","treeview","props","level","Number","item","Object","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","this","children","filter","child","isExcluded","leaf","selected","indeterminate","active","open","length","register","unregister","methods","Promise","resolve","then","updateOpen","key","emitOpen","$scopedSlots","label","push","scopedProps","text","$createElement","slot","staticClass","prepend","append","genPrependSlot","genLabel","genAppendSlot","VIcon","class","on","click","e","stopPropagation","checkChildren","undefined","disabled","$nextTick","updateSelected","emitSelected","computedIcon","map","genContent","unshift","genCheckbox","hasChildren","genToggle","genLevel","setTextColor","updateActive","emitActive","scopedSlots","c","genChild","genChildrenWrapper","h","genNode","genTransition","attrs","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","idKey","childrenKey","excluded","match","i","add","Array","dense","hoverable","items","multipleActive","openAll","returnObject","value","activeCache","Set","nodes","openCache","selectedCache","watch","oldKeys","keys","k","newKeys","getKeys","diff","forEach","oldSelectedCache","buildTree","deep","handleNodeCacheWatcher","getValue","$slots","console","updateAll","parent","oldNode","hasOwnProperty","vnode","node","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","descendants","getDescendants","parents","delete","isForced","changed","Map","descendant","set","calculated","getParents","entries","isParent","excludedItems","has","options","bind","themeClasses","render","_vm","_h","_c","_self","_v","staticRenderFns","component","VListItemSubtitle","VList","VTreeview"],"mappings":"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","file":"js/chunk-b9487500.118a3778.js","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport Colorable from '../../mixins/colorable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getObjectValueByPath, createRange } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String,\n    default: 'leaf',\n    validator: v => ['leaf', 'independent'].includes(v)\n  }\n};\n/* @vue/component */\n\nconst VTreeviewNode = baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null\n    },\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    hasLoaded: false,\n    isActive: false,\n    isIndeterminate: false,\n    isLoading: false,\n    isOpen: false,\n    isSelected: false\n  }),\n  computed: {\n    disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled) || this.parentIsDisabled && this.selectionType === 'leaf';\n    },\n\n    key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n\n    children() {\n      const children = getObjectValueByPath(this.item, this.itemChildren);\n      return children && children.filter(child => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)));\n    },\n\n    text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n\n    scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n\n    computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n\n    hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n\n  },\n\n  created() {\n    this.treeview.register(this);\n  },\n\n  beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n\n  methods: {\n    checkChildren() {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve();\n        this.isLoading = true;\n        resolve(this.loadChildren(this.item));\n      }).then(() => {\n        this.isLoading = false;\n        this.hasLoaded = true;\n      });\n    },\n\n    open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n\n    genLabel() {\n      const children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n\n    genPrependSlot() {\n      if (!this.$scopedSlots.prepend) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend'\n      }, this.$scopedSlots.prepend(this.scopedProps));\n    },\n\n    genAppendSlot() {\n      if (!this.$scopedSlots.append) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append'\n      }, this.$scopedSlots.append(this.scopedProps));\n    },\n\n    genContent() {\n      const children = [this.genPrependSlot(), this.genLabel(), this.genAppendSlot()];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n\n    genToggle() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => this.open());\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n\n    genCheckbox() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled\n        },\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected;\n                this.isIndeterminate = false;\n                this.treeview.updateSelected(this.key, this.isSelected);\n                this.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n\n    genLevel(level) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level'\n      }));\n    },\n\n    genNode() {\n      const children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle());\n      } else {\n        children.unshift(...this.genLevel(1));\n      }\n\n      children.unshift(...this.genLevel(this.level));\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open);\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive;\n              this.treeview.updateActive(this.key, this.isActive);\n              this.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n\n    genChild(item, parentIsDisabled) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n\n    genChildrenWrapper() {\n      if (!this.isOpen || !this.children) return null;\n      const children = [this.children.map(c => this.genChild(c, this.disabled))];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n\n    genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n\n  },\n\n  render(h) {\n    const children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n\n});\nexport default VTreeviewNode;\n//# sourceMappingURL=VTreeviewNode.js.map","import { getObjectValueByPath } from '../../../util/helpers';\nexport function filterTreeItem(item, search, textKey) {\n  const text = getObjectValueByPath(item, textKey);\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;\n}\nexport function filterTreeItems(filter, item, search, idKey, textKey, childrenKey, excluded) {\n  if (filter(item, search, textKey)) {\n    return true;\n  }\n\n  const children = getObjectValueByPath(item, childrenKey);\n\n  if (children) {\n    let match = false;\n\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true;\n      }\n    }\n\n    if (match) return true;\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey));\n  return false;\n}\n//# sourceMappingURL=filterTreeItems.js.map","// Styles\nimport \"../../../src/components/VTreeview/VTreeview.sass\"; // Components\n\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport { provide as RegistrableProvide } from '../../mixins/registrable'; // Utils\n\nimport { arrayDiff, deepEqual, getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nimport { filterTreeItems, filterTreeItem } from './util/filterTreeItems';\nexport default mixins(RegistrableProvide('treeview'), Themeable\n/* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide() {\n    return {\n      treeview: this\n    };\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => []\n    },\n    dense: Boolean,\n    filter: Function,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => []\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => []\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    level: -1,\n    activeCache: new Set(),\n    nodes: {},\n    openCache: new Set(),\n    selectedCache: new Set()\n  }),\n  computed: {\n    excludedItems() {\n      const excluded = new Set();\n      if (!this.search) return excluded;\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(this.filter || filterTreeItem, this.items[i], this.search, this.itemKey, this.itemText, this.itemChildren, excluded);\n      }\n\n      return excluded;\n    }\n\n  },\n  watch: {\n    items: {\n      handler() {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey));\n        const newKeys = this.getKeys(this.items);\n        const diff = arrayDiff(newKeys, oldKeys); // We only want to do stuff if items have changed\n\n        if (!diff.length && newKeys.length < oldKeys.length) return; // If nodes are removed we need to clear them from this.nodes\n\n        diff.forEach(k => delete this.nodes[k]);\n        const oldSelectedCache = [...this.selectedCache];\n        this.selectedCache = new Set();\n        this.activeCache = new Set();\n        this.openCache = new Set();\n        this.buildTree(this.items); // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected();\n      },\n\n      deep: true\n    },\n\n    active(value) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive);\n    },\n\n    value(value) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected);\n    },\n\n    open(value) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen);\n    }\n\n  },\n\n  created() {\n    const getValue = key => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key;\n\n    this.buildTree(this.items);\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true);\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true);\n    }\n  },\n\n  mounted() {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this);\n    }\n\n    if (this.openAll) {\n      this.updateAll(true);\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true));\n      this.emitOpen();\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll(value) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value));\n      this.emitOpen();\n    },\n\n    getKeys(items, keys = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey);\n        keys.push(key);\n        const children = getObjectValueByPath(items[i], this.itemChildren);\n\n        if (children) {\n          keys.push(...this.getKeys(children));\n        }\n      }\n\n      return keys;\n    },\n\n    buildTree(items, parent = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const key = getObjectValueByPath(item, this.itemKey);\n        const children = getObjectValueByPath(item, this.itemChildren, []);\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false,\n          isIndeterminate: false,\n          isActive: false,\n          isOpen: false,\n          vnode: null\n        };\n        const node = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map(c => getObjectValueByPath(c, this.itemKey)),\n          item\n        };\n        this.buildTree(children, key); // This fixed bug with dynamic children resetting selected parent state\n\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected;\n        } else {\n          node.isSelected = oldNode.isSelected;\n          node.isIndeterminate = oldNode.isIndeterminate;\n        }\n\n        node.isActive = oldNode.isActive;\n        node.isOpen = oldNode.isOpen;\n        this.nodes[key] = node;\n\n        if (children.length) {\n          const {\n            isSelected,\n            isIndeterminate\n          } = this.calculateState(key, this.nodes);\n          node.isSelected = isSelected;\n          node.isIndeterminate = isIndeterminate;\n        } // Don't forget to rebuild cache\n\n\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key);\n        if (this.nodes[key].isActive) this.activeCache.add(key);\n        if (this.nodes[key].isOpen) this.openCache.add(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    calculateState(node, state) {\n      const children = state[node].children;\n      const counts = children.reduce((counts, child) => {\n        counts[0] += +Boolean(state[child].isSelected);\n        counts[1] += +Boolean(state[child].isIndeterminate);\n        return counts;\n      }, [0, 0]);\n      const isSelected = !!children.length && counts[0] === children.length;\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0);\n      return {\n        isSelected,\n        isIndeterminate\n      };\n    },\n\n    emitOpen() {\n      this.emitNodeCache('update:open', this.openCache);\n    },\n\n    emitSelected() {\n      this.emitNodeCache('input', this.selectedCache);\n    },\n\n    emitActive() {\n      this.emitNodeCache('update:active', this.activeCache);\n    },\n\n    emitNodeCache(event, cache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache]);\n    },\n\n    handleNodeCacheWatcher(value, cache, updateFn, emitFn) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value;\n      const old = [...cache];\n      if (deepEqual(old, value)) return;\n      old.forEach(key => updateFn(key, false));\n      value.forEach(key => updateFn(key, true));\n      emitFn();\n    },\n\n    getDescendants(key, descendants = []) {\n      const children = this.nodes[key].children;\n      descendants.push(...children);\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants);\n      }\n\n      return descendants;\n    },\n\n    getParents(key) {\n      let parent = this.nodes[key].parent;\n      const parents = [];\n\n      while (parent !== null) {\n        parents.push(parent);\n        parent = this.nodes[parent].parent;\n      }\n\n      return parents;\n    },\n\n    register(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      this.nodes[key].vnode = node;\n      this.updateVnodeState(key);\n    },\n\n    unregister(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      if (this.nodes[key]) this.nodes[key].vnode = null;\n    },\n\n    isParent(key) {\n      return this.nodes[key].children && this.nodes[key].children.length;\n    },\n\n    updateActive(key, isActive) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false;\n          this.updateVnodeState(active);\n          this.activeCache.delete(active);\n        });\n      }\n\n      const node = this.nodes[key];\n      if (!node) return;\n      if (isActive) this.activeCache.add(key);else this.activeCache.delete(key);\n      node.isActive = isActive;\n      this.updateVnodeState(key);\n    },\n\n    updateSelected(key, isSelected, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const changed = new Map();\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected;\n            this.nodes[descendant].isIndeterminate = false;\n            changed.set(descendant, isSelected);\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes);\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate;\n        changed.set(key, isSelected);\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes);\n          this.nodes[parent].isSelected = calculated.isSelected;\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate;\n          changed.set(parent, calculated.isSelected);\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = false;\n        changed.set(key, isSelected);\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key);\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue;\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key);\n      }\n    },\n\n    updateOpen(key, isOpen) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const node = this.nodes[key];\n      const children = getObjectValueByPath(node.item, this.itemChildren);\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen));\n      } else if (children && children.length) {\n        node.isOpen = isOpen;\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    updateVnodeState(key) {\n      const node = this.nodes[key];\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected;\n        node.vnode.isIndeterminate = node.isIndeterminate;\n        node.vnode.isActive = node.isActive;\n        node.vnode.isOpen = node.isOpen;\n      }\n    },\n\n    isExcluded(key) {\n      return !!this.search && this.excludedItems.has(key);\n    }\n\n  },\n\n  render(h) {\n    const children = this.items.length ? this.items.filter(item => {\n      return !this.isExcluded(getObjectValueByPath(item, this.itemKey));\n    }).map(item => {\n      const genChild = VTreeviewNode.options.methods.genChild.bind(this);\n      return genChild(item, getObjectValueByPath(item, this.itemDisabled));\n    })\n    /* istanbul ignore next */\n    : this.$slots.default; // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeview.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-list-item-subtitle',{staticClass:\"text-wrap\"},[_vm._v(\" You can control the text and background color of the active treeview node. \")]),_c('div',{staticClass:\"mt-4\"},[_c('v-treeview',{attrs:{\"activatable\":\"\",\"color\":\"warning\",\"items\":_vm.items}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <!-- TreeviewColor -->\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <div>\r\n        <v-list-item-subtitle class=\"text-wrap\">\r\n        You can control the text and background color of the active treeview node.\r\n        </v-list-item-subtitle>\r\n        <div class=\"mt-4\">\r\n            <v-treeview\r\n                activatable\r\n                color=\"warning\"\r\n                :items=\"items\"\r\n            ></v-treeview>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TreeviewColor\",\r\n\r\n  data: () => ({\r\n      items: [\r\n        {\r\n          id: 1,\r\n          name: 'Applications :',\r\n          children: [\r\n            { id: 2, name: 'Calendar : app' },\r\n            { id: 3, name: 'Chrome : app' },\r\n            { id: 4, name: 'Webstorm : app' },\r\n          ],\r\n        },\r\n        {\r\n          id: 5,\r\n          name: 'Documents :',\r\n          children: [\r\n            {\r\n              id: 6,\r\n              name: 'vuetify :',\r\n              children: [\r\n                {\r\n                  id: 7,\r\n                  name: 'src :',\r\n                  children: [\r\n                    { id: 8, name: 'index : ts' },\r\n                    { id: 9, name: 'bootstrap : ts' },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              name: 'material2 :',\r\n              children: [\r\n                {\r\n                  id: 11,\r\n                  name: 'src :',\r\n                  children: [\r\n                    { id: 12, name: 'v-btn : ts' },\r\n                    { id: 13, name: 'v-card : ts' },\r\n                    { id: 14, name: 'v-window : ts' },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 15,\r\n          name: 'Downloads :',\r\n          children: [\r\n            { id: 16, name: 'October : pdf' },\r\n            { id: 17, name: 'November : pdf' },\r\n            { id: 18, name: 'Tutorial : html' },\r\n          ],\r\n        },\r\n        {\r\n          id: 19,\r\n          name: 'Videos :',\r\n          children: [\r\n            {\r\n              id: 20,\r\n              name: 'Tutorials :',\r\n              children: [\r\n                { id: 21, name: 'Basic layouts : mp4' },\r\n                { id: 22, name: 'Advanced techniques : mp4' },\r\n                { id: 23, name: 'All about app : dir' },\r\n              ],\r\n            },\r\n            { id: 24, name: 'Intro : mov' },\r\n            { id: 25, name: 'Conference introduction : avi' },\r\n          ],\r\n        },\r\n      ],\r\n  }),\r\n};\r\n</script>","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./TreeviewColor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./TreeviewColor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeviewColor.vue?vue&type=template&id=2c228961&\"\nimport script from \"./TreeviewColor.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeviewColor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/_vuetify-loader@1.6.0@vuetify-loader/lib/runtime/installComponents.js\"\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VListItemSubtitle,VTreeview})\n"],"sourceRoot":""}