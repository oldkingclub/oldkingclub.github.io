{"version":3,"sources":["webpack:///./src/components/vuetifyComponents/chips/ChipsSelects.vue?e3b9","webpack:///src/components/vuetifyComponents/chips/ChipsSelects.vue","webpack:///./src/components/vuetifyComponents/chips/ChipsSelects.vue?6ee1","webpack:///./src/components/vuetifyComponents/chips/ChipsSelects.vue","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VAutocomplete/VAutocomplete.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/_core-js@3.7.0@core-js/modules/es.array.index-of.js","webpack:///./node_modules/_core-js@3.7.0@core-js/modules/es.array.splice.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VCombobox/VCombobox.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","items","scopedSlots","_u","key","fn","ref","item","select","selected","_b","on","$event","remove","_s","model","value","callback","$$v","chips","expression","staticRenderFns","name","data","methods","component","VChip","VCombobox","VListItemSubtitle","VList","defaultMenuProps","offsetY","offsetOverflow","transition","extend","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","undefined","lazySearch","computed","classes","call","selectedIndex","filteredItems","selectedItems","map","getValue","hideSelected","some","hasItem","length","selectedItem","getText","isSearching","internalSearch","allItems","text","val","$emit","searchIsDirty","multiple","isFocused","hasDisplayedItems","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","removeEventListener","updateSelf","hasSlot","oldVal","isMenuActive","activateMenu","setSearch","setMenuIndex","$nextTick","menu","getTiles","updateMenuDimensions","updateDimensions","keyCode","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","autocomplete","domProps","slot","genInputSlot","role","genSelections","e","onFocus","isAppendInner","target","badInput","validity","onKeyDown","changeSelectedIndex","onTabDown","preventDefault","setSelectedItems","selectedValues","event","_event$clipboardData","_event$clipboardData2","currentItem","currentItemText","clipboardData","setData","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","Object","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","$","$indexOf","arrayMethodIsStrict","arrayMethodUsesToLength","nativeIndexOf","NEGATIVE_ZERO","STRICT_METHOD","USES_TO_LENGTH","ACCESSORS","1","proto","forced","searchElement","apply","arguments","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","0","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","splice","start","deleteCount","insertCount","actualDeleteCount","A","k","to","O","len","actualStart","argumentsLength","delimiters","returnObject","editingIndex","toString","$slots","delimiter","d","endsWith","slice","updateTags","paste","onPaste","index","chip","genChipSelection","componentOptions","listeners","dblclick","onChipInput","getMenuIndex","onFilteredItemsChanged","selectionStart","enter","onEnterDown","stopPropagation","updateEditing","_value","isUsingSlot","$scopedSlots","selection","hasChips","updateCombobox","menuIndex","pastedItemText","getData","findExistingIndex"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,uBAAuB,CAACE,YAAY,aAAa,CAACN,EAAIO,GAAG,2FAA2FH,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,aAAa,CAACI,MAAM,CAAC,MAAQR,EAAIS,MAAM,MAAQ,GAAG,UAAY,GAAG,MAAQ,wBAAwB,SAAW,GAAG,eAAe,qBAAqB,KAAO,IAAIC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,YAAYC,GAAG,SAASC,GAClf,IAAIN,EAAQM,EAAIN,MACZO,EAAOD,EAAIC,KACXC,EAASF,EAAIE,OACbC,EAAWH,EAAIG,SACnB,MAAO,CAACb,EAAG,SAASJ,EAAIkB,GAAG,CAACV,MAAM,CAAC,cAAcS,EAAS,MAAQ,IAAIE,GAAG,CAAC,MAAQH,EAAO,cAAc,SAASI,GAAQ,OAAOpB,EAAIqB,OAAON,MAAS,SAASP,GAAM,GAAO,CAACJ,EAAG,SAAS,CAACJ,EAAIO,GAAGP,EAAIsB,GAAGP,MAASf,EAAIO,GAAG,KAAKH,EAAG,OAAO,CAACJ,EAAIO,GAAG,uBAAuBgB,MAAM,CAACC,MAAOxB,EAAS,MAAEyB,SAAS,SAAUC,GAAM1B,EAAI2B,MAAMD,GAAKE,WAAW,YAAY,IAAI,IAC3VC,EAAkB,G,kCC+BtB,GACEC,KAAM,eAENC,KAAM,WAAR,OACM,MAAN,mEACM,MAAN,yBAEEC,QAAS,CACP,OADJ,SACA,GACM,KAAN,sCACM,KAAN,oCC/Cwd,I,qECOpdC,EAAY,eACd,EACAlC,EACA8B,GACA,EACA,KACA,KACA,MAIa,aAAAI,EAAiB,QAOhC,IAAkBA,EAAW,CAACC,QAAA,KAAMC,YAAA,KAAUC,kBAAAC,EAAA,Q,2DCzB9C,8DAQA,MAAMC,EAAmB,IAAK,OAC5BC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,GAIC,cAAQC,OAAO,CAC5BZ,KAAM,iBACNa,MAAO,CACLC,cAAe,CACbC,KAAMC,QACNC,SAAS,GAEXC,gBAAiB,CACfH,KAAMC,QACNC,SAAS,GAEXE,OAAQ,CACNJ,KAAMK,SACNH,QAAS,CAAChC,EAAMoC,EAAWC,IAClBA,EAASC,oBAAoBC,QAAQH,EAAUE,sBAAwB,GAGlFE,WAAYT,QACZU,UAAW,CACTX,KAAM,OAAQY,QAAQd,MAAMa,UAAUX,KACtCE,QAAS,IAAMT,GAEjBoB,SAAUZ,QACVa,YAAa,CACXd,KAAMe,OACNb,aAASc,IAIb,OACE,MAAO,CACLC,WAAY7D,KAAK0D,cAIrBI,SAAU,CACR,UACE,MAAO,IAAK,OAAQN,QAAQM,SAASC,QAAQC,KAAKhE,MAChD,kBAAkB,EAClB,qCAAsCA,KAAKiE,eAAiB,IAIhE,gBACE,OAAOjE,KAAKkE,eAGd,iBACE,OAAOlE,KAAKmE,cAAcC,IAAItD,GAAQd,KAAKqE,SAASvD,KAGtD,oBACE,OAAOd,KAAKsE,aAAetE,KAAKkE,cAAcK,KAAKzD,IAASd,KAAKwE,QAAQ1D,IAASd,KAAKkE,cAAcO,OAAS,GAGhH,eACE,OAAyB,MAArBzE,KAAK0E,aAA6B,EAC/Bf,OAAO3D,KAAK2E,QAAQ3E,KAAK0E,eAAeD,QAGjD,gBACE,OAAKzE,KAAK4E,aAAe5E,KAAKyD,UAAmC,MAAvBzD,KAAK6E,eAA+B7E,KAAK8E,SAC5E9E,KAAK8E,SAAS9B,OAAOlC,IAC1B,MAAMS,EAAQ,eAAoBT,EAAMd,KAAKmD,UACvC4B,EAAgB,MAATxD,EAAgBoC,OAAOpC,GAAS,GAC7C,OAAOvB,KAAKgD,OAAOlC,EAAM6C,OAAO3D,KAAK6E,gBAAiBE,MAI1DF,eAAgB,CACd,MACE,OAAO7E,KAAK6D,YAGd,IAAImB,GACFhF,KAAK6D,WAAamB,EAClBhF,KAAKiF,MAAM,sBAAuBD,KAKtC,oBACE,OAAO,GAGT,UACE,OAAOhF,KAAKkF,eAAiBlF,KAAKmE,cAAcM,OAAS,GAG3D,cACE,OAAOzE,KAAKmF,UAAYnF,KAAKkF,eAAiBlF,KAAKkF,eAAiBlF,KAAK6E,iBAAmB7E,KAAK2E,QAAQ3E,KAAK0E,eAGhH,cACE,QAAK1E,KAAKoF,YACHpF,KAAKqF,oBAAsBrF,KAAKsD,aAGzC,cACE,MAAMZ,EAAQ,OAAQc,QAAQM,SAASwB,YAAYtB,KAAKhE,MAExD,OADA0C,EAAM6C,cAAe,4BAA2B7C,EAAM6C,cAAgB,KAAKC,OACpE,IAAKnD,KACPK,IAIP,gBACE,OAA8B,MAAvB1C,KAAK6E,gBAAkD,KAAxB7E,KAAK6E,gBAG7C,eACE,OAAI7E,KAAKmF,SAAiB,KACnBnF,KAAKmE,cAAcsB,KAAKC,GACtB1F,KAAK2F,gBAAgB3F,KAAKqE,SAASqB,GAAI1F,KAAKqE,SAASrE,KAAK4F,kBAIrE,WACE,MAAM9D,EAAO,OAAQ0B,QAAQM,SAAS+B,SAAS7B,KAAKhE,MAMpD,OALA8B,EAAKY,MAAQ,IAAKZ,EAAKY,MACrBlC,MAAOR,KAAK8F,iBACZrC,SAAUzD,KAAKyD,WAAazD,KAAK4E,cAAgB5E,KAAKkE,cAAcO,OACpEf,YAAa1D,KAAK6E,gBAEb/C,IAIXiE,MAAO,CACL7B,cAAe,yBACf0B,cAAe,YAEf,UAAUZ,GACJA,GACFgB,SAASC,iBAAiB,OAAQjG,KAAKkG,QACvClG,KAAKmG,MAAMC,OAASpG,KAAKmG,MAAMC,MAAMrF,WAErCiF,SAASK,oBAAoB,OAAQrG,KAAKkG,QAC1ClG,KAAKsG,eAIT,aAAatB,IACPA,GAAQhF,KAAKuG,UACjBvG,KAAK6D,gBAAaD,IAGpB,MAAMoB,EAAKwB,GAMHA,GAAUA,EAAO/B,SAAWzE,KAAKsD,aAActD,KAAKoF,WAAcpF,KAAKyG,eAAgBzB,EAAIP,QAAQzE,KAAK0G,gBAGhH,YAAY1B,GACVhF,KAAK6D,WAAamB,GAGpBH,eAAgB,0BAChB1B,SAAU,cAGZ,UACEnD,KAAK2G,aAGP,YACEX,SAASK,oBAAoB,OAAQrG,KAAKkG,SAG5CnE,QAAS,CACP,uBAAuBiD,EAAKwB,GAGtBxB,IAAQwB,IACZxG,KAAK4G,cAAc,GACnB5G,KAAK6G,UAAU,KACR7G,KAAK6E,iBAAiC,IAAfG,EAAIP,QAAiBzE,KAAK+C,mBACtD/C,KAAKmG,MAAMW,KAAKC,WAChB/G,KAAK4G,aAAa,QAItB,0BACE5G,KAAKgH,wBAGP,uBAEEhH,KAAKyG,cAAgBzG,KAAKmG,MAAMW,MAAQ9G,KAAKmG,MAAMW,KAAKG,oBAG1D,oBAAoBC,GAGdlH,KAAKkF,gBAELlF,KAAKmF,UAAY+B,IAAY,OAASC,MACZ,IAAxBnH,KAAKiE,cACPjE,KAAKiE,cAAgBjE,KAAKmE,cAAcM,OAAS,EAEjDzE,KAAKiE,gBAEEjE,KAAKmF,UAAY+B,IAAY,OAASE,MAC3CpH,KAAKiE,eAAiBjE,KAAKmE,cAAcM,OAAS,EACpDzE,KAAKiE,eAAiB,EAEtBjE,KAAKiE,gBAEEiD,IAAY,OAASG,WAAaH,IAAY,OAASI,QAChEtH,KAAKuH,sBAIT,oBACE,MAAMC,EAAWxH,KAAKiE,cAChBwD,EAAUzH,KAAKmE,cAAcqD,GAEnC,IAAKxH,KAAK0H,eAAiB1H,KAAK2H,YAAYF,GAAU,OACtD,MAAMG,EAAY5H,KAAKmE,cAAcM,OAAS,EAG9C,IAA4B,IAAxBzE,KAAKiE,eAAsC,IAAd2D,EAE/B,YADA5H,KAAKiE,cAAgB2D,GAIvB,MAAMnD,EAASzE,KAAKmE,cAAcM,OAC5BoD,EAAYL,IAAa/C,EAAS,EAAI+C,EAAWA,EAAW,EAC5DM,EAAW9H,KAAKmE,cAAc0D,GAE/BC,EAGH9H,KAAK+H,WAAWN,GAFhBzH,KAAKgI,SAAShI,KAAKmF,SAAW,QAAKvB,GAKrC5D,KAAKiE,cAAgB4D,GAGvB,oBACE7H,KAAK6E,oBAAiBjB,EACtB,OAAQJ,QAAQzB,QAAQkG,kBAAkBjE,KAAKhE,OAGjD,WACE,MAAMoG,EAAQ,OAAW5C,QAAQzB,QAAQmG,SAASlE,KAAKhE,MAUvD,OATAoG,EAAMtE,KAAO,eAAUsE,EAAMtE,KAAM,CACjCvB,MAAO,CACL,wBAAyB,eAAqBP,KAAKmG,MAAMW,KAAM,iBAC/DqB,aAAc,eAAqB/B,EAAMtE,KAAM,qBAAsB,QAEvEsG,SAAU,CACR7G,MAAOvB,KAAK6E,kBAGTuB,GAGT,eACE,MAAMiC,EAAO,OAAQ7E,QAAQzB,QAAQuG,aAAatE,KAAKhE,MAEvD,OADAqI,EAAKvG,KAAKvB,MAAMgI,KAAO,WAChBF,GAGT,gBACE,OAAOrI,KAAKuG,SAAWvG,KAAKmF,SAAW,OAAQ3B,QAAQzB,QAAQyG,cAAcxE,KAAKhE,MAAQ,IAG5F,OAAOyI,GAELzI,KAAKoF,WAAY,EACjBqD,GAAKzI,KAAK6G,UAAU,IAAM7G,KAAKiF,MAAM,OAAQwD,KAG/C,QAAQA,GACDzI,KAAK0H,gBACV1H,KAAKiE,eAAiB,EAAIjE,KAAKiE,eAAiB,EAAIjE,KAAK0I,UACpD1I,KAAK2I,cAAcF,EAAEG,SAAS5I,KAAK0G,iBAG1C,QAAQ+B,GACN,GAAIzI,KAAKiE,eAAiB,IAAMwE,EAAEG,OAAQ,OAC1C,MAAMA,EAASH,EAAEG,OACXrH,EAAQqH,EAAOrH,MAEjBqH,EAAOrH,OAAOvB,KAAK0G,eACvB1G,KAAK6E,eAAiBtD,EACtBvB,KAAK6I,SAAWD,EAAOE,UAAYF,EAAOE,SAASD,UAGrD,UAAUJ,GACR,MAAMvB,EAAUuB,EAAEvB,QAClB,OAAQ1D,QAAQzB,QAAQgH,UAAU/E,KAAKhE,KAAMyI,GAK7CzI,KAAKgJ,oBAAoB9B,IAG3B,YAAYuB,KAEZ,UAAUA,GACR,OAAQjF,QAAQzB,QAAQkH,UAAUjF,KAAKhE,KAAMyI,GAC7CzI,KAAKsG,cAGP,SAASmC,GAEPA,EAAES,iBAIFlJ,KAAK0G,gBAGP,WAAW5F,GACT,OAAQ0C,QAAQzB,QAAQgG,WAAW/D,KAAKhE,KAAMc,GAC9Cd,KAAK2G,aAGP,mBACE,OAAQnD,QAAQzB,QAAQoH,iBAAiBnF,KAAKhE,MAGzCA,KAAKoF,WAAWpF,KAAK2G,aAG5B,YAGE3G,KAAK6G,UAAU,KACR7G,KAAKmF,UAAanF,KAAK6E,gBAAmB7E,KAAKyG,eAClDzG,KAAK6E,gBAAkB7E,KAAKmE,cAAcM,QAAUzE,KAAKmF,UAAYnF,KAAKuG,QAAU,KAAOvG,KAAK2E,QAAQ3E,KAAK0E,kBAKnH,cACO1E,KAAKkF,eAAkBlF,KAAK4F,iBAE5B5F,KAAK2F,gBAAgB3F,KAAK6E,eAAgB7E,KAAKqE,SAASrE,KAAK4F,iBAChE5F,KAAK2G,cAIT,QAAQ7F,GACN,OAAOd,KAAKoJ,eAAe/F,QAAQrD,KAAKqE,SAASvD,KAAU,GAG7D,OAAOuI,GACL,IAAIC,EAAsBC,EAE1B,IAA4B,IAAxBvJ,KAAKiE,cAAsB,OAC/B,MAAMuF,EAAcxJ,KAAKmE,cAAcnE,KAAKiE,eACtCwF,EAAkBzJ,KAAK2E,QAAQ6E,GACW,OAA/CF,EAAuBD,EAAMK,gBAAkCJ,EAAqBK,QAAQ,aAAcF,GAC1D,OAAhDF,EAAwBF,EAAMK,gBAAkCH,EAAsBI,QAAQ,2CAA4CF,GAC3IJ,EAAMH,sB,sFCvXG,SAASU,EAAmBC,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAOG,eAAiBH,G,sECFnC,SAASI,EAAiBC,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOJ,MAAMQ,KAAKJ,G,gBCD3E,SAASK,IACtB,MAAM,IAAIC,UAAU,wICGP,SAASC,EAAmBZ,GACzC,OAAOa,EAAkBb,IAAQc,EAAgBd,IAAQe,eAA2Bf,IAAQgB,M,oCCJ9F,IAAIC,EAAI,EAAQ,QACZC,EAAW,EAAQ,QAA+B1H,QAClD2H,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgB,GAAG7H,QAEnB8H,IAAkBD,GAAiB,EAAI,CAAC,GAAG7H,QAAQ,GAAI,GAAK,EAC5D+H,EAAgBJ,EAAoB,WACpCK,EAAiBJ,EAAwB,UAAW,CAAEK,WAAW,EAAMC,EAAG,IAI9ET,EAAE,CAAElC,OAAQ,QAAS4C,OAAO,EAAMC,OAAQN,IAAkBC,IAAkBC,GAAkB,CAC9FhI,QAAS,SAAiBqI,GACxB,OAAOP,EAEHD,EAAcS,MAAM3L,KAAM4L,YAAc,EACxCb,EAAS/K,KAAM0L,EAAeE,UAAUnH,OAAS,EAAImH,UAAU,QAAKhI,O,oCClB5E,IAAIkH,EAAI,EAAQ,QACZe,EAAkB,EAAQ,QAC1BC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QACzBC,EAA+B,EAAQ,QACvClB,EAA0B,EAAQ,QAElCmB,EAAsBD,EAA6B,UACnDd,EAAiBJ,EAAwB,SAAU,CAAEK,WAAW,EAAMe,EAAG,EAAGd,EAAG,IAE/Ee,EAAMC,KAAKD,IACXE,EAAMD,KAAKC,IACXC,EAAmB,iBACnBC,EAAkC,kCAKtC5B,EAAE,CAAElC,OAAQ,QAAS4C,OAAO,EAAMC,QAASW,IAAwBf,GAAkB,CACnFsB,OAAQ,SAAgBC,EAAOC,GAC7B,IAIIC,EAAaC,EAAmBC,EAAGC,EAAG3C,EAAM4C,EAJ5CC,EAAInB,EAAShM,MACboN,EAAMrB,EAASoB,EAAE1I,QACjB4I,EAAcxB,EAAgBe,EAAOQ,GACrCE,EAAkB1B,UAAUnH,OAWhC,GATwB,IAApB6I,EACFR,EAAcC,EAAoB,EACL,IAApBO,GACTR,EAAc,EACdC,EAAoBK,EAAMC,IAE1BP,EAAcQ,EAAkB,EAChCP,EAAoBP,EAAIF,EAAIR,EAAUe,GAAc,GAAIO,EAAMC,IAE5DD,EAAMN,EAAcC,EAAoBN,EAC1C,MAAMjC,UAAUkC,GAGlB,IADAM,EAAIf,EAAmBkB,EAAGJ,GACrBE,EAAI,EAAGA,EAAIF,EAAmBE,IACjC3C,EAAO+C,EAAcJ,EACjB3C,KAAQ6C,GAAGjB,EAAec,EAAGC,EAAGE,EAAE7C,IAGxC,GADA0C,EAAEvI,OAASsI,EACPD,EAAcC,EAAmB,CACnC,IAAKE,EAAII,EAAaJ,EAAIG,EAAML,EAAmBE,IACjD3C,EAAO2C,EAAIF,EACXG,EAAKD,EAAIH,EACLxC,KAAQ6C,EAAGA,EAAED,GAAMC,EAAE7C,UACb6C,EAAED,GAEhB,IAAKD,EAAIG,EAAKH,EAAIG,EAAML,EAAoBD,EAAaG,WAAYE,EAAEF,EAAI,QACtE,GAAIH,EAAcC,EACvB,IAAKE,EAAIG,EAAML,EAAmBE,EAAII,EAAaJ,IACjD3C,EAAO2C,EAAIF,EAAoB,EAC/BG,EAAKD,EAAIH,EAAc,EACnBxC,KAAQ6C,EAAGA,EAAED,GAAMC,EAAE7C,UACb6C,EAAED,GAGlB,IAAKD,EAAI,EAAGA,EAAIH,EAAaG,IAC3BE,EAAEF,EAAII,GAAezB,UAAUqB,EAAI,GAGrC,OADAE,EAAE1I,OAAS2I,EAAML,EAAoBD,EAC9BE,M,kCCnEX,kDASe,cAAcvK,OAAO,CAClCZ,KAAM,aACNa,MAAO,CACL6K,WAAY,CACV3K,KAAMkH,MACNhH,QAAS,IAAM,IAEjB0K,aAAc,CACZ5K,KAAMC,QACNC,SAAS,IAGbhB,KAAM,KAAM,CACV2L,cAAe,IAEjB3J,SAAU,CACR,uBACE,OAAO9D,KAAKmF,SAAWnF,KAAKmE,cAAcM,QAAUzE,KAAK6E,gBAAkB,IAAI6I,WAAWjJ,QAG5F,UACE,OAAO,OAAQjB,QAAQM,SAASyC,QAAQvC,KAAKhE,OAASA,KAAKmF,UAG7D,oBACE,OAAO,GAGT,cACE,QAAKnF,KAAKoF,YACHpF,KAAKqF,qBAAuBrF,KAAK2N,OAAO,aAAe3N,KAAKsD,cAIvEvB,QAAS,CACP,wBAAwBiD,GACtB,GAAIA,GAAOhF,KAAKmF,UAAYnF,KAAKuN,WAAW9I,OAAQ,CAClD,MAAMmJ,EAAY5N,KAAKuN,WAAW9H,KAAKoI,GAAK7I,EAAI8I,SAASD,IAExC,MAAbD,IACF5N,KAAK6E,eAAiBG,EAAI+I,MAAM,EAAG/I,EAAIP,OAASmJ,EAAUnJ,QAC1DzE,KAAKgO,cAIThO,KAAKgH,wBAGP,WACE,MAAMZ,EAAQ,OAAc5C,QAAQzB,QAAQmG,SAASlE,KAAKhE,MAG1D,cAFOoG,EAAMtE,KAAKvB,MAAMsB,KACxBuE,EAAMtE,KAAKZ,GAAG+M,MAAQjO,KAAKkO,QACpB9H,GAGT,iBAAiBtF,EAAMqN,GACrB,MAAMC,EAAO,OAAQ5K,QAAQzB,QAAQsM,iBAAiBrK,KAAKhE,KAAMc,EAAMqN,GAYvE,OAVInO,KAAKmF,WACPiJ,EAAKE,iBAAiBC,UAAY,IAAKH,EAAKE,iBAAiBC,UAC3DC,SAAU,KACRxO,KAAKyN,aAAeU,EACpBnO,KAAK6E,eAAiB7E,KAAK2E,QAAQ7D,GACnCd,KAAKiE,eAAiB,KAKrBmK,GAGT,YAAYtN,GACV,OAAQ0C,QAAQzB,QAAQ0M,YAAYzK,KAAKhE,KAAMc,GAC/Cd,KAAKyN,cAAgB,GAKvB,YAAYhF,GACVA,EAAES,iBAEElJ,KAAK0O,gBAAkB,GAC3B1O,KAAK6G,UAAU7G,KAAKsG,aAGtB,uBAAuBtB,EAAKwB,GACrBxG,KAAK+C,iBACV,OAAcS,QAAQzB,QAAQ4M,uBAAuB3K,KAAKhE,KAAMgF,EAAKwB,IAGvE,UAAUiC,GACR,MAAMvB,EAAUuB,EAAEvB,QAClB,OAAQ1D,QAAQzB,QAAQgH,UAAU/E,KAAKhE,KAAMyI,GAGzCzI,KAAKmF,UAAY+B,IAAY,OAASC,MAA4C,IAApCnH,KAAKmG,MAAMC,MAAMwI,eACjE5O,KAAKsG,aACIY,IAAY,OAAS2H,OAC9B7O,KAAK8O,YAAYrG,GAOnBzI,KAAKgJ,oBAAoB9B,IAG3B,UAAUuB,GAIR,GAAIzI,KAAKmF,UAAYnF,KAAK6E,iBAA2C,IAAzB7E,KAAK0O,eAG/C,OAFAjG,EAAES,iBACFT,EAAEsG,kBACK/O,KAAKgO,aAGd,OAAcxK,QAAQzB,QAAQkH,UAAUjF,KAAKhE,KAAMyI,IAGrD,WAAW3H,GAELd,KAAKyN,cAAgB,EACvBzN,KAAKgP,gBAEL,OAAcxL,QAAQzB,QAAQgG,WAAW/D,KAAKhE,KAAMc,IAIxD,mBAC4B,MAAtBd,KAAK4F,eAAgD,KAAvB5F,KAAK4F,cACrC5F,KAAKmE,cAAgB,GAErBnE,KAAKmE,cAAgBnE,KAAKmF,SAAWnF,KAAK4F,cAAgB,CAAC5F,KAAK4F,gBAIpE,SAASrE,GACP,IAAI0N,EAEJ,OAAQzL,QAAQzB,QAAQiG,SAAShE,KAAKhE,KAA0B,OAAnBiP,EAAS1N,GAAiB0N,EAASjP,KAAK6E,iBAGvF,gBACE,MAAMtD,EAAQvB,KAAK4F,cAAcmI,QACjCxM,EAAMvB,KAAKyN,cAAgBzN,KAAK6E,eAChC7E,KAAKgI,SAASzG,GACdvB,KAAKyN,cAAgB,GAGvB,iBACE,MAAMyB,EAAcrM,QAAQ7C,KAAKmP,aAAaC,YAAcpP,KAAKqP,SAG7DH,IAAgBlP,KAAKkF,gBAGrBlF,KAAK6E,iBAAmB7E,KAAK2E,QAAQ3E,KAAK4F,gBAAgB5F,KAAKgI,WAG/DkH,IAAalP,KAAK6E,oBAAiBjB,KAGzC,aACE5D,KAAKmF,SAAWnF,KAAKgO,aAAehO,KAAKsP,kBAG3C,aACE,MAAMC,EAAYvP,KAAK0O,eAIvB,GAAIa,EAAY,IAAMvP,KAAKkF,cAAe,OAE1C,GAAIlF,KAAKyN,cAAgB,EACvB,OAAOzN,KAAKgP,gBAGd,MAAMb,EAAQnO,KAAKmE,cAAcd,QAAQrD,KAAK6E,gBAI9C,GAAIsJ,GAAS,EAAG,CACd,MAAMvI,EAAgB5F,KAAK4F,cAAcmI,QACzCnI,EAAc+G,OAAOwB,EAAO,GAC5BnO,KAAKgI,SAASpC,GAMhB,GAAI2J,GAAa,EAAG,OAAOvP,KAAK6E,eAAiB,KACjD7E,KAAK+H,WAAW/H,KAAK6E,gBACrB7E,KAAK6E,eAAiB,MAGxB,QAAQwE,GACN,IAAIC,EAEJ,IAAKtJ,KAAKmF,UAAYnF,KAAKkF,cAAe,OAC1C,MAAMsK,EAAiE,OAA/ClG,EAAuBD,EAAMK,oBAAyB,EAASJ,EAAqBmG,QAAQ,4CAEhHD,IAA8D,IAA5CxP,KAAK0P,kBAAkBF,KAC3CnG,EAAMH,iBACN,OAAQ1F,QAAQzB,QAAQgG,WAAW/D,KAAKhE,KAAMwP","file":"js/chunk-e52f0d4e.92412806.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-list-item-subtitle',{staticClass:\"text-wrap\"},[_vm._v(\" Selects can use chips to display the selected data. Try adding your own tags below. \")]),_c('div',{staticClass:\"mt-4\"},[_c('v-combobox',{attrs:{\"items\":_vm.items,\"chips\":\"\",\"clearable\":\"\",\"label\":\"Your favorite hobbies\",\"multiple\":\"\",\"prepend-icon\":\"mdi-filter-variant\",\"solo\":\"\"},scopedSlots:_vm._u([{key:\"selection\",fn:function(ref){\nvar attrs = ref.attrs;\nvar item = ref.item;\nvar select = ref.select;\nvar selected = ref.selected;\nreturn [_c('v-chip',_vm._b({attrs:{\"input-value\":selected,\"close\":\"\"},on:{\"click\":select,\"click:close\":function($event){return _vm.remove(item)}}},'v-chip',attrs,false),[_c('strong',[_vm._v(_vm._s(item))]),_vm._v(\" \"),_c('span',[_vm._v(\"(interest)\")])])]}}]),model:{value:(_vm.chips),callback:function ($$v) {_vm.chips=$$v},expression:\"chips\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <!-- Selects -->\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <div>\r\n        <v-list-item-subtitle class=\"text-wrap\">\r\n        Selects can use chips to display the selected data. Try adding your own tags below.\r\n        </v-list-item-subtitle>\r\n        <div class=\"mt-4\">\r\n            <v-combobox\r\n                v-model=\"chips\"\r\n                :items=\"items\"\r\n                chips\r\n                clearable\r\n                label=\"Your favorite hobbies\"\r\n                multiple\r\n                prepend-icon=\"mdi-filter-variant\"\r\n                solo\r\n            >\r\n                <template v-slot:selection=\"{ attrs, item, select, selected }\">\r\n                <v-chip\r\n                    v-bind=\"attrs\"\r\n                    :input-value=\"selected\"\r\n                    close\r\n                    @click=\"select\"\r\n                    @click:close=\"remove(item)\"\r\n                >\r\n                    <strong>{{ item }}</strong>&nbsp;\r\n                    <span>(interest)</span>\r\n                </v-chip>\r\n                </template>\r\n            </v-combobox>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ChipsSelects\",\r\n\r\n  data: () => ({\r\n        chips: ['Programming', 'Playing video games', 'Watching movies', 'Sleeping'],\r\n        items: ['Streaming', 'Eating'],\r\n  }),\r\n  methods: {\r\n      remove (item) {\r\n        this.chips.splice(this.chips.indexOf(item), 1)\r\n        this.chips = [...this.chips]\r\n      },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./ChipsSelects.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./ChipsSelects.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChipsSelects.vue?vue&type=template&id=67a34fd0&\"\nimport script from \"./ChipsSelects.vue?vue&type=script&lang=js&\"\nexport * from \"./ChipsSelects.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/_vuetify-loader@1.6.0@vuetify-loader/lib/runtime/installComponents.js\"\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VChip,VCombobox,VListItemSubtitle})\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onBlur(e) {\n      // Copy from VTextField, instead of inheriting from VSelect\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => []\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: () => ({\n    editingIndex: -1\n  }),\n  computed: {\n    computedCounterValue() {\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\n    },\n\n    hasSlot() {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\n    },\n\n    isAnyValueAllowed() {\n      return true;\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\n    }\n\n  },\n  methods: {\n    onInternalSearchChanged(val) {\n      if (val && this.multiple && this.delimiters.length) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\n\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\n          this.updateTags();\n        }\n      }\n\n      this.updateMenuDimensions();\n    },\n\n    genInput() {\n      const input = VAutocomplete.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data.on.paste = this.onPaste;\n      return input;\n    },\n\n    genChipSelection(item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\n\n      if (this.multiple) {\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\n          dblclick: () => {\n            this.editingIndex = index;\n            this.internalSearch = this.getText(item);\n            this.selectedIndex = -1;\n          }\n        };\n      }\n\n      return chip;\n    },\n\n    onChipInput(item) {\n      VSelect.options.methods.onChipInput.call(this, item);\n      this.editingIndex = -1;\n    },\n\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown(e) {\n      e.preventDefault(); // If has menu index, let v-select-list handle\n\n      if (this.getMenuIndex() > -1) return;\n      this.$nextTick(this.updateSelf);\n    },\n\n    onFilteredItemsChanged(val, oldVal) {\n      if (!this.autoSelectFirst) return;\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal);\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // If user is at selection index of 0\n      // create a new tag\n\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\n        this.updateSelf();\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onTabDown(e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\n        e.preventDefault();\n        e.stopPropagation();\n        return this.updateTags();\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e);\n    },\n\n    selectItem(item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing();\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item);\n      }\n    },\n\n    setSelectedItems() {\n      if (this.internalValue == null || this.internalValue === '') {\n        this.selectedItems = [];\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\n      }\n    },\n\n    setValue(value) {\n      var _value;\n\n      VSelect.options.methods.setValue.call(this, (_value = value) != null ? _value : this.internalSearch);\n    },\n\n    updateEditing() {\n      const value = this.internalValue.slice();\n      value[this.editingIndex] = this.internalSearch;\n      this.setValue(value);\n      this.editingIndex = -1;\n    },\n\n    updateCombobox() {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips; // If search is not dirty and is\n      // using slot, do nothing\n\n      if (isUsingSlot && !this.searchIsDirty) return; // The internal search is not matching\n      // the internal value, update the input\n\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot\n      // to avoid a double input\n\n      if (isUsingSlot) this.internalSearch = undefined;\n    },\n\n    updateSelf() {\n      this.multiple ? this.updateTags() : this.updateCombobox();\n    },\n\n    updateTags() {\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n\n      if (menuIndex < 0 && !this.searchIsDirty) return;\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing();\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch); // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n\n      if (index > -1) {\n        const internalValue = this.internalValue.slice();\n        internalValue.splice(index, 1);\n        this.setValue(internalValue);\n      } // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n\n\n      if (menuIndex > -1) return this.internalSearch = null;\n      this.selectItem(this.internalSearch);\n      this.internalSearch = null;\n    },\n\n    onPaste(event) {\n      var _event$clipboardData;\n\n      if (!this.multiple || this.searchIsDirty) return;\n      const pastedItemText = (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.getData('text/vnd.vuetify.autocomplete.item+plain');\n\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\n        event.preventDefault();\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=VCombobox.js.map"],"sourceRoot":""}