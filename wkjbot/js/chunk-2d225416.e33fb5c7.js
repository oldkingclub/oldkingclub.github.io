(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225416"],{e42c:function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("v-list-item-subtitle",{staticClass:"text-wrap"},[e._v(" If you're loading data already paginated and sorted from a backend, you can use the "),a("code",[e._v("server-items-length")]),e._v(" prop. Defining this prop will disable the built-in sorting and pagination, and you will instead need to use the available events ( "),a("code",[e._v("update:page")]),e._v(", "),a("code",[e._v("update:sortBy")]),e._v(", "),a("code",[e._v("update:options")]),e._v(", etc) to know when to request new pages from your backend. Use the "),a("code",[e._v("loading")]),e._v(" prop to display a progress bar while fetching data. ")]),a("div",{staticClass:"mt-4"},[a("v-data-table",{staticClass:"border",attrs:{headers:e.headers,items:e.desserts,options:e.options,"server-items-length":e.totalDesserts,loading:e.loading},on:{"update:options":function(t){e.options=t}}})],1)],1)},s=[],o=(a("233a"),a("845c"),{name:"DatatablesPaginateSortServerside",data:function(){return{totalDesserts:0,desserts:[],loading:!0,options:{},headers:[{text:"Dessert (100g serving)",align:"start",sortable:!1,value:"name"},{text:"Calories",value:"calories"},{text:"Fat (g)",value:"fat"},{text:"Carbs (g)",value:"carbs"},{text:"Protein (g)",value:"protein"},{text:"Iron (%)",value:"iron"}]}},watch:{options:{handler:function(){var e=this;this.getDataFromApi().then((function(t){e.desserts=t.items,e.totalDesserts=t.total}))},deep:!0}},mounted:function(){var e=this;this.getDataFromApi().then((function(t){e.desserts=t.items,e.totalDesserts=t.total}))},methods:{getDataFromApi:function(){var e=this;return this.loading=!0,new Promise((function(t){var a=e.options,n=a.sortBy,s=a.sortDesc,o=a.page,r=a.itemsPerPage,i=e.getDesserts(),l=i.length;1===n.length&&1===s.length&&(i=i.sort((function(e,t){var a=e[n[0]],o=t[n[0]];return s[0]?a<o?1:a>o?-1:0:a<o?-1:a>o?1:0}))),r>0&&(i=i.slice((o-1)*r,o*r)),setTimeout((function(){e.loading=!1,t({items:i,total:l})}),1e3)}))},getDesserts:function(){return[{name:"Frozen Yogurt",calories:159,fat:6,carbs:24,protein:4,iron:"1%"},{name:"Ice cream sandwich",calories:237,fat:9,carbs:37,protein:4.3,iron:"1%"},{name:"Eclair",calories:262,fat:16,carbs:23,protein:6,iron:"7%"},{name:"Cupcake",calories:305,fat:3.7,carbs:67,protein:4.3,iron:"8%"},{name:"Gingerbread",calories:356,fat:16,carbs:49,protein:3.9,iron:"16%"},{name:"Jelly bean",calories:375,fat:0,carbs:94,protein:0,iron:"0%"},{name:"Lollipop",calories:392,fat:.2,carbs:98,protein:0,iron:"2%"},{name:"Honeycomb",calories:408,fat:3.2,carbs:87,protein:6.5,iron:"45%"},{name:"Donut",calories:452,fat:25,carbs:51,protein:4.9,iron:"22%"},{name:"KitKat",calories:518,fat:26,carbs:65,protein:7,iron:"6%"}]}}}),r=o,i=a("c701"),l=a("7033"),c=a.n(l),d=a("f017"),p=a("d9e4"),u=Object(i["a"])(r,n,s,!1,null,null,null);t["default"]=u.exports;c()(u,{VDataTable:d["a"],VListItemSubtitle:p["c"]})}}]);
//# sourceMappingURL=chunk-2d225416.e33fb5c7.js.map