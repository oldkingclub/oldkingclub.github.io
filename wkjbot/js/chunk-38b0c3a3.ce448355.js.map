{"version":3,"sources":["webpack:///./src/components/vuetifyComponents/treeview/TreeviewShaped.vue?b8a6","webpack:///src/components/vuetifyComponents/treeview/TreeviewShaped.vue","webpack:///./src/components/vuetifyComponents/treeview/TreeviewShaped.vue?10e8","webpack:///./src/components/vuetifyComponents/treeview/TreeviewShaped.vue","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/VTreeviewNode.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/util/filterTreeItems.js","webpack:///./node_modules/_vuetify@2.3.17@vuetify/lib/components/VTreeview/VTreeview.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","items","staticRenderFns","name","data","component","VListItemSubtitle","VList","VTreeview","baseMixins","mixins","VTreeviewNodeProps","activatable","Boolean","activeClass","type","String","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","extend","inject","treeview","props","level","Number","item","Object","parentIsDisabled","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","children","filter","child","isExcluded","leaf","selected","indeterminate","active","open","length","register","unregister","methods","Promise","resolve","then","updateOpen","key","emitOpen","$scopedSlots","label","push","scopedProps","text","slot","prepend","append","genPrependSlot","genLabel","genAppendSlot","VIcon","class","on","click","e","stopPropagation","checkChildren","undefined","disabled","$nextTick","updateSelected","emitSelected","computedIcon","map","genContent","unshift","genCheckbox","hasChildren","genToggle","genLevel","setTextColor","updateActive","emitActive","scopedSlots","c","genChild","genChildrenWrapper","h","genNode","genTransition","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","idKey","childrenKey","excluded","match","i","add","Array","dense","hoverable","multipleActive","openAll","returnObject","value","activeCache","Set","nodes","openCache","selectedCache","watch","oldKeys","keys","k","newKeys","getKeys","diff","forEach","oldSelectedCache","buildTree","deep","handleNodeCacheWatcher","getValue","$slots","console","updateAll","parent","oldNode","hasOwnProperty","vnode","node","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","descendants","getDescendants","parents","delete","isForced","changed","Map","descendant","set","calculated","getParents","entries","isParent","excludedItems","has","options","bind","themeClasses"],"mappings":"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","file":"js/chunk-38b0c3a3.ce448355.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-list-item-subtitle',{staticClass:\"text-wrap\"},[_vm._v(\" Shaped treeview's have rounded borders on one side of the nodes. \")]),_c('div',{staticClass:\"mt-4\"},[_c('v-treeview',{attrs:{\"shaped\":\"\",\"hoverable\":\"\",\"activatable\":\"\",\"items\":_vm.items}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <!-- TreeviewShaped -->\r\n    <!-- ----------------------------------------------------------------------------- -->\r\n    <div>\r\n        <v-list-item-subtitle class=\"text-wrap\">\r\n        Shaped treeview's have rounded borders on one side of the nodes.\r\n        </v-list-item-subtitle>\r\n        <div class=\"mt-4\">\r\n            <v-treeview\r\n                shaped\r\n                hoverable\r\n                activatable\r\n                :items=\"items\"\r\n            ></v-treeview>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TreeviewShaped\",\r\n\r\n  data: () => ({\r\n      items: [\r\n        {\r\n          id: 1,\r\n          name: 'Applications :',\r\n          children: [\r\n            { id: 2, name: 'Calendar : app' },\r\n            { id: 3, name: 'Chrome : app' },\r\n            { id: 4, name: 'Webstorm : app' },\r\n          ],\r\n        },\r\n        {\r\n          id: 5,\r\n          name: 'Documents :',\r\n          children: [\r\n            {\r\n              id: 6,\r\n              name: 'vuetify :',\r\n              children: [\r\n                {\r\n                  id: 7,\r\n                  name: 'src :',\r\n                  children: [\r\n                    { id: 8, name: 'index : ts' },\r\n                    { id: 9, name: 'bootstrap : ts' },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              name: 'material2 :',\r\n              children: [\r\n                {\r\n                  id: 11,\r\n                  name: 'src :',\r\n                  children: [\r\n                    { id: 12, name: 'v-btn : ts' },\r\n                    { id: 13, name: 'v-card : ts' },\r\n                    { id: 14, name: 'v-window : ts' },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 15,\r\n          name: 'Downloads :',\r\n          children: [\r\n            { id: 16, name: 'October : pdf' },\r\n            { id: 17, name: 'November : pdf' },\r\n            { id: 18, name: 'Tutorial : html' },\r\n          ],\r\n        },\r\n        {\r\n          id: 19,\r\n          name: 'Videos :',\r\n          children: [\r\n            {\r\n              id: 20,\r\n              name: 'Tutorials :',\r\n              children: [\r\n                { id: 21, name: 'Basic layouts : mp4' },\r\n                { id: 22, name: 'Advanced techniques : mp4' },\r\n                { id: 23, name: 'All about app : dir' },\r\n              ],\r\n            },\r\n            { id: 24, name: 'Intro : mov' },\r\n            { id: 25, name: 'Conference introduction : avi' },\r\n          ],\r\n        },\r\n      ],\r\n  }),\r\n};\r\n</script>","import mod from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./TreeviewShaped.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.2.1@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./TreeviewShaped.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeviewShaped.vue?vue&type=template&id=e47d1ac4&\"\nimport script from \"./TreeviewShaped.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeviewShaped.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/_vuetify-loader@1.6.0@vuetify-loader/lib/runtime/installComponents.js\"\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VListItemSubtitle,VTreeview})\n","// Components\nimport { VExpandTransition } from '../transitions';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport Colorable from '../../mixins/colorable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getObjectValueByPath, createRange } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String,\n    default: 'leaf',\n    validator: v => ['leaf', 'independent'].includes(v)\n  }\n};\n/* @vue/component */\n\nconst VTreeviewNode = baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null\n    },\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    hasLoaded: false,\n    isActive: false,\n    isIndeterminate: false,\n    isLoading: false,\n    isOpen: false,\n    isSelected: false\n  }),\n  computed: {\n    disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled) || this.parentIsDisabled && this.selectionType === 'leaf';\n    },\n\n    key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n\n    children() {\n      const children = getObjectValueByPath(this.item, this.itemChildren);\n      return children && children.filter(child => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)));\n    },\n\n    text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n\n    scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n\n    computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n\n    hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n\n  },\n\n  created() {\n    this.treeview.register(this);\n  },\n\n  beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n\n  methods: {\n    checkChildren() {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve();\n        this.isLoading = true;\n        resolve(this.loadChildren(this.item));\n      }).then(() => {\n        this.isLoading = false;\n        this.hasLoaded = true;\n      });\n    },\n\n    open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n\n    genLabel() {\n      const children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n\n    genPrependSlot() {\n      if (!this.$scopedSlots.prepend) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend'\n      }, this.$scopedSlots.prepend(this.scopedProps));\n    },\n\n    genAppendSlot() {\n      if (!this.$scopedSlots.append) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append'\n      }, this.$scopedSlots.append(this.scopedProps));\n    },\n\n    genContent() {\n      const children = [this.genPrependSlot(), this.genLabel(), this.genAppendSlot()];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n\n    genToggle() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => this.open());\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n\n    genCheckbox() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled\n        },\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected;\n                this.isIndeterminate = false;\n                this.treeview.updateSelected(this.key, this.isSelected);\n                this.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n\n    genLevel(level) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level'\n      }));\n    },\n\n    genNode() {\n      const children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle());\n      } else {\n        children.unshift(...this.genLevel(1));\n      }\n\n      children.unshift(...this.genLevel(this.level));\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open);\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive;\n              this.treeview.updateActive(this.key, this.isActive);\n              this.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n\n    genChild(item, parentIsDisabled) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n\n    genChildrenWrapper() {\n      if (!this.isOpen || !this.children) return null;\n      const children = [this.children.map(c => this.genChild(c, this.disabled))];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n\n    genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n\n  },\n\n  render(h) {\n    const children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n\n});\nexport default VTreeviewNode;\n//# sourceMappingURL=VTreeviewNode.js.map","import { getObjectValueByPath } from '../../../util/helpers';\nexport function filterTreeItem(item, search, textKey) {\n  const text = getObjectValueByPath(item, textKey);\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;\n}\nexport function filterTreeItems(filter, item, search, idKey, textKey, childrenKey, excluded) {\n  if (filter(item, search, textKey)) {\n    return true;\n  }\n\n  const children = getObjectValueByPath(item, childrenKey);\n\n  if (children) {\n    let match = false;\n\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true;\n      }\n    }\n\n    if (match) return true;\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey));\n  return false;\n}\n//# sourceMappingURL=filterTreeItems.js.map","// Styles\nimport \"../../../src/components/VTreeview/VTreeview.sass\"; // Components\n\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport { provide as RegistrableProvide } from '../../mixins/registrable'; // Utils\n\nimport { arrayDiff, deepEqual, getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nimport { filterTreeItems, filterTreeItem } from './util/filterTreeItems';\nexport default mixins(RegistrableProvide('treeview'), Themeable\n/* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide() {\n    return {\n      treeview: this\n    };\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => []\n    },\n    dense: Boolean,\n    filter: Function,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => []\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => []\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    level: -1,\n    activeCache: new Set(),\n    nodes: {},\n    openCache: new Set(),\n    selectedCache: new Set()\n  }),\n  computed: {\n    excludedItems() {\n      const excluded = new Set();\n      if (!this.search) return excluded;\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(this.filter || filterTreeItem, this.items[i], this.search, this.itemKey, this.itemText, this.itemChildren, excluded);\n      }\n\n      return excluded;\n    }\n\n  },\n  watch: {\n    items: {\n      handler() {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey));\n        const newKeys = this.getKeys(this.items);\n        const diff = arrayDiff(newKeys, oldKeys); // We only want to do stuff if items have changed\n\n        if (!diff.length && newKeys.length < oldKeys.length) return; // If nodes are removed we need to clear them from this.nodes\n\n        diff.forEach(k => delete this.nodes[k]);\n        const oldSelectedCache = [...this.selectedCache];\n        this.selectedCache = new Set();\n        this.activeCache = new Set();\n        this.openCache = new Set();\n        this.buildTree(this.items); // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected();\n      },\n\n      deep: true\n    },\n\n    active(value) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive);\n    },\n\n    value(value) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected);\n    },\n\n    open(value) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen);\n    }\n\n  },\n\n  created() {\n    const getValue = key => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key;\n\n    this.buildTree(this.items);\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true);\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true);\n    }\n  },\n\n  mounted() {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this);\n    }\n\n    if (this.openAll) {\n      this.updateAll(true);\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true));\n      this.emitOpen();\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll(value) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value));\n      this.emitOpen();\n    },\n\n    getKeys(items, keys = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey);\n        keys.push(key);\n        const children = getObjectValueByPath(items[i], this.itemChildren);\n\n        if (children) {\n          keys.push(...this.getKeys(children));\n        }\n      }\n\n      return keys;\n    },\n\n    buildTree(items, parent = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const key = getObjectValueByPath(item, this.itemKey);\n        const children = getObjectValueByPath(item, this.itemChildren, []);\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false,\n          isIndeterminate: false,\n          isActive: false,\n          isOpen: false,\n          vnode: null\n        };\n        const node = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map(c => getObjectValueByPath(c, this.itemKey)),\n          item\n        };\n        this.buildTree(children, key); // This fixed bug with dynamic children resetting selected parent state\n\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected;\n        } else {\n          node.isSelected = oldNode.isSelected;\n          node.isIndeterminate = oldNode.isIndeterminate;\n        }\n\n        node.isActive = oldNode.isActive;\n        node.isOpen = oldNode.isOpen;\n        this.nodes[key] = node;\n\n        if (children.length) {\n          const {\n            isSelected,\n            isIndeterminate\n          } = this.calculateState(key, this.nodes);\n          node.isSelected = isSelected;\n          node.isIndeterminate = isIndeterminate;\n        } // Don't forget to rebuild cache\n\n\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key);\n        if (this.nodes[key].isActive) this.activeCache.add(key);\n        if (this.nodes[key].isOpen) this.openCache.add(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    calculateState(node, state) {\n      const children = state[node].children;\n      const counts = children.reduce((counts, child) => {\n        counts[0] += +Boolean(state[child].isSelected);\n        counts[1] += +Boolean(state[child].isIndeterminate);\n        return counts;\n      }, [0, 0]);\n      const isSelected = !!children.length && counts[0] === children.length;\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0);\n      return {\n        isSelected,\n        isIndeterminate\n      };\n    },\n\n    emitOpen() {\n      this.emitNodeCache('update:open', this.openCache);\n    },\n\n    emitSelected() {\n      this.emitNodeCache('input', this.selectedCache);\n    },\n\n    emitActive() {\n      this.emitNodeCache('update:active', this.activeCache);\n    },\n\n    emitNodeCache(event, cache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache]);\n    },\n\n    handleNodeCacheWatcher(value, cache, updateFn, emitFn) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value;\n      const old = [...cache];\n      if (deepEqual(old, value)) return;\n      old.forEach(key => updateFn(key, false));\n      value.forEach(key => updateFn(key, true));\n      emitFn();\n    },\n\n    getDescendants(key, descendants = []) {\n      const children = this.nodes[key].children;\n      descendants.push(...children);\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants);\n      }\n\n      return descendants;\n    },\n\n    getParents(key) {\n      let parent = this.nodes[key].parent;\n      const parents = [];\n\n      while (parent !== null) {\n        parents.push(parent);\n        parent = this.nodes[parent].parent;\n      }\n\n      return parents;\n    },\n\n    register(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      this.nodes[key].vnode = node;\n      this.updateVnodeState(key);\n    },\n\n    unregister(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      if (this.nodes[key]) this.nodes[key].vnode = null;\n    },\n\n    isParent(key) {\n      return this.nodes[key].children && this.nodes[key].children.length;\n    },\n\n    updateActive(key, isActive) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false;\n          this.updateVnodeState(active);\n          this.activeCache.delete(active);\n        });\n      }\n\n      const node = this.nodes[key];\n      if (!node) return;\n      if (isActive) this.activeCache.add(key);else this.activeCache.delete(key);\n      node.isActive = isActive;\n      this.updateVnodeState(key);\n    },\n\n    updateSelected(key, isSelected, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const changed = new Map();\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected;\n            this.nodes[descendant].isIndeterminate = false;\n            changed.set(descendant, isSelected);\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes);\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate;\n        changed.set(key, isSelected);\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes);\n          this.nodes[parent].isSelected = calculated.isSelected;\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate;\n          changed.set(parent, calculated.isSelected);\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = false;\n        changed.set(key, isSelected);\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key);\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue;\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key);\n      }\n    },\n\n    updateOpen(key, isOpen) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const node = this.nodes[key];\n      const children = getObjectValueByPath(node.item, this.itemChildren);\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen));\n      } else if (children && children.length) {\n        node.isOpen = isOpen;\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    updateVnodeState(key) {\n      const node = this.nodes[key];\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected;\n        node.vnode.isIndeterminate = node.isIndeterminate;\n        node.vnode.isActive = node.isActive;\n        node.vnode.isOpen = node.isOpen;\n      }\n    },\n\n    isExcluded(key) {\n      return !!this.search && this.excludedItems.has(key);\n    }\n\n  },\n\n  render(h) {\n    const children = this.items.length ? this.items.filter(item => {\n      return !this.isExcluded(getObjectValueByPath(item, this.itemKey));\n    }).map(item => {\n      const genChild = VTreeviewNode.options.methods.genChild.bind(this);\n      return genChild(item, getObjectValueByPath(item, this.itemDisabled));\n    })\n    /* istanbul ignore next */\n    : this.$slots.default; // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeview.js.map"],"sourceRoot":""}